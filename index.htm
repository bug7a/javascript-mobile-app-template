<!DOCTYPE html>
<html>
    <head>
        
        <title>JavaScript Mobile App Template and UI Components (Platforms: iOS, Android)</title>
        
        <meta charset="UTF-8">
        <meta name="description" content="Simple and fully customizable user interface template. Design for mobile (Platforms: iOS, Android) app development on Apache Cordova framework.">
        <meta name="keywords" content="App template, template, UI Template, user interface template, Select Text, Combobox, searchable, JavaScript, JS, UI, UX, User Interface, Component, Apache, Cordova, Mobile, iOS, Android, simple, fully customizable" >
        <meta name="author" content="Bugra Ozden">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">

        <!-- LIBRARY FILES -->
        <script src="library/src-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
        <link rel="stylesheet" type="text/css" href="library/basic.min.css">
        <script src="library/basic.min.js" type="text/javascript" charset="utf-8"></script>

        <script src="js/component/ui-group.js" type="text/javascript" charset="utf-8"></script>

        <style>

            body {
                overflow: hidden;
            }

            .basic_box::-webkit-scrollbar {
                width: 10px;
                height: 10px;
            }

            .basic_box::-webkit-scrollbar-track {
                border-radius: 10px;
                border: 3px solid rgba(0, 0, 0, 0);
                background-clip: padding-box;
            }

            .basic_box::-webkit-scrollbar-thumb {
                background: rgba(0, 0, 0, 0.4);
                border-radius: 10px;
                border: 3px solid rgba(0, 0, 0, 0);
                background-clip: padding-box;
            }

            .basic_box::-webkit-scrollbar-thumb:hover {
                background: rgba(0, 0, 0, 0.6);
                border-radius: 10px;
                border: 3px solid rgba(0, 0, 0, 0);
                background-clip: padding-box;
            }

            .text-highlight {
                font-family: opensans-bold;
                /* color: #41AC9F; */
                /* background-color: #FFF0C2; */
                border-radius: 4px;
                padding: 0px 8px;
            }

            .editor { 
                position:relative;
                margin:0px;
                border-radius: 6px;
                /* margin-left: 5px;margin-right: 0px; */
                height:200px;
                font-size: 16px;
            }

        </style>

        <script>
            
        // VARIABLES
        var boxContent
        var editor1
        
        // First running function.
        var start = function() {

            page.fit(600)

            // BOX: main view
            boxContent = createBox(0, 0, page.width, page.height)
            that.scrollY = 1
            that.visible = 1

            // LABEL: Title text
            boxContent.lblTitle = createLabel(0, 104, 600, "auto")
            boxContent.add(that);
            that.text = document.getElementById("htm-title").innerHTML
            that.fontSize = 70
            that.textAlign = "center"
            that.opacity = 0
            that.textColor = "black"
            that.element.style.fontFamily = "opensans-bold"
            that.center("left")

            // IMAGE: Title logo
            //boxContent.imgTitle = createImage(0, 70, 211, 107);
            boxContent.imgTitle = createImage(0, 70, 249, 107);
            boxContent.add(that);
            //that.load("image/mobile-ui-logo.png");
            that.load("image/mobile-app-ui-template-v2.png");
            that.center("left");

            // LABEL: Description text
            boxContent.lblDesc = createLabel(0, 200, 600, "auto")
            boxContent.add(that);
            that.text = document.getElementById("htm-desc").innerHTML
            that.fontSize = 35
            that.textAlign = "center"
            that.opacity = 0.6
            that.textColor = "black"
            that.center("left")

            // GROUP: Platforms: Android, iOS
            boxContent.grpPlatforms = createUIGroup();
            boxContent.add(that);
            that.setInnerSpaces(0, 0, 0, 0);
            that.setSpacesBetweenItems(6);
            that.setItemAlignment("horizontal", "center");
            that.color = "transparent";
            that.opacity = 0;
            that.setMotion("opacity 0.3s");
            boxContent.grpPlatforms.withMotion(function(self) {
                self.opacity = 1;
            });

            // LABEL: Platforms.
            boxContent.lblPlatforms = createLabel(0, 0, "auto", "auto");
            that.text = "Platforms:";
            that.fontSize = 18;
            that.textColor = "black";
            that.opacity = 0.6; // 0.8
            boxContent.grpPlatforms.addItem(boxContent.lblPlatforms);

            // IMAGE: Android.
            boxContent.imgAndroidIcon = createImage(0, 0, 24, 24);
            that.load("image/android.png");
            that.opacity = 0.6; // 0.6
            boxContent.grpPlatforms.addItem(boxContent.imgAndroidIcon);

            // IMAGE: IOS.
            boxContent.imgiOSIcon = createImage(0, 0, 24, 24);
            that.load("image/ios.png");
            that.opacity = 0.6; // 0.6
            boxContent.grpPlatforms.addItem(boxContent.imgiOSIcon);

            boxContent.grpPlatforms.onResize(function(self) {
                boxContent.grpPlatforms.aline(boxContent.lblDesc, "bottom", 4, "center");
            });

            // BOX: sample1 iframe content
            boxContent.boxSample1 = createBox(0, 370, 360, 640)
            boxContent.add(that);
            that.text = document.getElementById("htm-sample1").innerHTML
            that.clickable = 1
            that.round = 12
            that.color = "white"
            that.center("left")

            // IMAGE: phone template
            boxContent.imgPhone = createImage(0, 370, 360, 640)
            boxContent.add(that);
            that.load("image/phone.svg")
            that.center("left")
            that.width += 10 
            that.height += 8
            that.top -= 4
            that.left -= 5

            // LABEL: info 1 text
            boxContent.lblInfo1 = createLabel(0, 1050, 600, "auto")
            boxContent.add(that);
            // that.text = document.getElementById("htm-info1").innerHTML + "<br><br>" + document.getElementById("htm-info2").innerHTML
            that.text = document.getElementById("htm-info1").innerHTML
            that.fontSize = 20
            that.textAlign = "center"
            that.opacity = 0.6
            that.textColor = "black"
            that.center("left")

            // BOX: GitHub Button
            boxContent.btnGitHub = createCard("View on GitHub", 1, "https://github.com/bug7a/javascript-mobile-app-template")
            boxContent.add(that);
            that.center("left")
            that.top = boxContent.lblInfo1.top + 100

            // BOX: Demo Apps
            boxContent.boxDemos = createBox(0, 0, 560, 900);
            boxContent.add(that);
            that.color = "white";
            that.border = 1;
            that.color = "transparent";
            that.border = 0;
            that.borderColor = "rgba(0, 0, 0, 0.8)";
            //that.top = boxContent.btnGitHub.top + 200
            that.round = 8;
            that.aline(boxContent.btnGitHub, "bottom", 100, "center");
            that.center("left");

            // LABEL: Mobile Apps developed with this template:
            boxContent.boxDemos.lblTitle = createLabel(0, 40, 560, "auto");
            boxContent.boxDemos.add(that);
            that.text = "Mobile Apps developed with this template:";
            that.textAlign = "center";

            // GROUP: Platforms: Android, iOS
            boxContent.boxDemos.grpApps = createUIGroup();
            boxContent.boxDemos.add(that);
            that.setInnerSpaces(0, 0, 0, 0);
            that.setSpacesBetweenItems(14);
            that.setItemAlignment("horizontal", "center");
            that.color = "transparent";

            createAppIcon("image/app-icon/app1.png", "Personal<br>Expense<br>Book", "https://play.google.com/store/apps/details?id=com.bugraozden.expense", "android");
            boxContent.boxDemos.grpApps.addItem(that);

            createAppIcon("image/app-icon/app2.png", "Photo Notes<br>with<br>Password", "https://play.google.com/store/apps/details?id=com.bugraozden.photo.notes.with.password", "android");
            boxContent.boxDemos.grpApps.addItem(that);

            createAppIcon("image/app-icon/app3.png", "Math Race<br>Game", "https://play.google.com/store/apps/details?id=com.bugraozden.mathrace", "android");
            boxContent.boxDemos.grpApps.addItem(that);

            createAppIcon("image/app-icon/app4.png", "Robot:<br>Coding Game", "https://play.google.com/store/apps/details?id=com.bugraozden.roboticcodinggame", "android");
            boxContent.boxDemos.grpApps.addItem(that);

            boxContent.boxDemos.grpApps.onResize(function(self) {
                boxContent.boxDemos.grpApps.aline(boxContent.boxDemos.lblTitle, "bottom", 20, "center");
            });

            // LABEL: 
            /*
            boxContent.boxDemos.lblReduceCosts = createLabel();
            boxContent.boxDemos.add(that);
            //that.text = "Reduce costs by using these technologies.<br>Develop your app faster and deliver it to your users."; // as soon as possible
            //that.text = "It reduces the development costs and enables the project to be developed quickly.<br>Most of the JavaScript libraries can be used in the project."
            //that.fontSize = 16;
            that.textAlign = "center";
            that.width = boxContent.boxDemos.width;
            that.height = "auto";
            that.bottom = 40;
            that.fontSize = 20;
            that.opacity = 0.6;
            that.textColor = "black";
            */

            // htm-info2
            // BOX: info 2
            boxContent.boxDemos.boxReduceCosts = createBox();
            boxContent.boxDemos.add(that);
            //that.text = "Reduce costs by using these technologies.<br>Develop your app faster and deliver it to your users."; // as soon as possible
            //that.text = "It reduces the development costs and enables the project to be developed quickly.<br>Most of the JavaScript libraries can be used in the project."
            //that.fontSize = 16;
            that.html = document.getElementById("htm-info2").innerHTML;
            //that.textAlign = "center";
            that.width = boxContent.boxDemos.width;
            that.height = "auto";
            that.bottom = 40;
            that.left = 0;
            that.fontSize = 20;
            that.opacity = 0.6;
            that.textColor = "black";


            // BOX: code box
            boxContent.boxEditor = createBox(0, 1300, 600, 400)
            boxContent.add(that);
            that.element.setAttribute("id", "editor1")
            that.element.setAttribute("class", "editor")
            that.onResize(function(self) {
                boxContent.boxFooter.top = self.top + self.height + 20
            })
            that.aline(boxContent.boxDemos, "bottom", 60, "center");
            that.center("left")

            // LABEL: An example piece of code:
            boxContent.lblCodeTitle = createLabel(0, 0, 560, "auto");
            boxContent.add(that);
            that.text = "An example piece of code (index.js):";
            that.textAlign = "center";
            that.aline(boxContent.boxEditor, "top", 26, "center");
            
            // BOX: Footer box
            boxContent.boxFooter = createBox(0, 2200, 600, 500)
            boxContent.add(that);
            that.color = "transparent"
            that.center("left")

            // BOX: Demo Apps
            boxContent.boxFooter.boxDemos = createBox(0, 60, 560, 300);
            boxContent.boxFooter.add(that);
            that.color = "white";
            that.border = 1;
            that.color = "transparent";
            that.border = 0;
            that.borderColor = "rgba(0, 0, 0, 0.8)";
            //that.top = boxContent.boxFooter.btnGitHub.top + 200
            that.round = 8;
            that.center("left");

            // LABEL: See in Action
            boxContent.boxFooter.boxDemos.lblTitle = createLabel(0, 40, 560, "auto");
            boxContent.boxFooter.boxDemos.add(that);
            that.text = "Technologies used to develop this template:";
            that.textAlign = "center";

            // GROUP: Platforms: Android, iOS
            boxContent.boxFooter.boxDemos.grpApps = createUIGroup();
            boxContent.boxFooter.boxDemos.add(that);
            that.setInnerSpaces(0, 0, 0, 0);
            that.setSpacesBetweenItems(14);
            that.setItemAlignment("horizontal", "center");
            that.color = "transparent";

            createTechIcon("image/tech-icon/basic-js-logo.png", "basic.js", "https://bug7a.github.io/basic.js/", "android");
            boxContent.boxFooter.boxDemos.grpApps.addItem(that);

            createTechIcon("image/tech-icon/basic-ui-logo.png", "basicUI", "https://bug7a.github.io/basic.js-examples/", "android");
            boxContent.boxFooter.boxDemos.grpApps.addItem(that);

            boxContent.boxFooter.boxDemos.grpApps.onResize(function(self) {
                boxContent.boxFooter.boxDemos.grpApps.aline(boxContent.boxFooter.boxDemos.lblTitle, "bottom", 20, "center");
            });

            // BOX: Contact to me:
            //"You can contact for your mobile application projects (Android, iOS):"
            boxContent.boxFooter.boxContact = createBox(0, 0, 500, 72);
            boxContent.boxFooter.add(that);
            that.color = "white";
            that.border = 1;
            that.round = 8;
            that.aline(boxContent.boxFooter.boxDemos, "bottom", 0, "center")
            that.visible = 0;

            // LABEL: Contact description text.
            boxContent.boxFooter.boxContact.lblDesc = createLabel(0, 0, 500);
            boxContent.boxFooter.boxContact.add(that);
            that.text = "You can contact me for your mobile application projects;<br>EMail: bugra.ozden@gmail.com";
            that.fontSize = 12;
            that.spaceX = 20;
            that.spaceY = 12;
            that.textAlign = "center";

            // LABEL: Info.
            boxContent.boxFooter.lblInfo = createLabel(0, 0, 600, 140)
            boxContent.boxFooter.add(that)
            that.text = "Copyright 2020-2024 <b onclick='gotoBugraSite();' style='cursor: pointer;'>Bugra Ozden</b><br>Licensed under <b onclick='gotoLicenses();' style='cursor: pointer;'>the Apache License</b>, Version 2.0"
            //that.text = "Developed by <b onclick='gotoBugraSite();' style='cursor: pointer;'>Bugra Ozden</b><br>Licensed under <b onclick='gotoLicenseSite();'>CC 4.0</b>"
            that.fontSize = 12
            that.opacity = 0.8
            that.textAlign = "center"
            that.clickable = 1;
            that.aline(boxContent.boxFooter.boxDemos, "bottom", 40, "center")

            // OBJECT: Mobile App Template Button
            // boxContent.boxFooter.btn3 = createCard("Mobile App Template", 2, "https://github.com/bug7a/cordova-mobile-app-ui-template")
            //that.center()

            // OBJECT: All Components Button
            /*
            boxContent.boxFooter.btn2 = createCard("DEMO MOBILE APP", 2, "https://bugraozden.com/personal-expense-book/")
            boxContent.boxFooter.add(that);
            that.width = 200;
            that.center()
            that.left -= 100
            */

            // OBJECT: basic.js Technique Button
            /*
            boxContent.boxFooter.btn4 = createCard("basic.js LIBRARY", 2, "https://bug7a.github.io/basic.js/")
            boxContent.boxFooter.add(that);
            that.center()
            that.left += 100
            */

            // Code Editor
            editor1 = ace.edit("editor1");
            editor1.setReadOnly(true);
            editor1.setTheme("ace/theme/ambiance");
            editor1.session.setMode("ace/mode/javascript");
            editor1.setOption("minLines", 8);
            editor1.setOption("maxLines", 500);
            editor1.renderer.setShowGutter(false);
            // document.getElementById("editor"+$editorNumber).style.zoom = (1 / App.screenRatio);
            editor1.setValue(document.getElementById("code-example1").innerHTML);
            editor1.gotoLine(2);

            page.onResize(function() {
                
                page.fit(600)
                boxContent.width = page.width
                boxContent.height = page.height
                boxContent.lblTitle.center("left")
                boxContent.imgTitle.center("left")
                boxContent.lblDesc.center("left")
                boxContent.boxSample1.center("left")
                boxContent.imgPhone.center("left")
                boxContent.lblInfo1.center("left")
                boxContent.btnGitHub.center("left")
                boxContent.boxEditor.center("left")
                boxContent.boxFooter.center("left")
                boxContent.boxDemos.center("left")
                boxContent.lblCodeTitle.center("left");

                boxContent.grpPlatforms.aline(boxContent.lblDesc, "bottom", 4, "center");

            })
            
        }
        
        // OTHER FUNCTIONS
        
        var createCard = function(name, type = 1, link = "") {
            
            var ui = createBox(0, 0, 210, 70)
            that.color = "white"
            that.round = 8
            that.border = 2
            that.borderColor = "gray"
            that.link = link
            that.onClick(function(self) {
                if (self.link != "") {
                    window.open(self.link, "_blank")
                }
            })
            that.element.style.cursor = "pointer";

            if (type == 2) {
                that.width = 190
                that.height = 50
                that.color = "white"
                that.border = 1
                that.borderColor = "lightgray"
                //that.color = "#EAEAE9"
                //that.border = 0
            }

            ui.lblText = createLabel(0, 0, "auto", "auto")
            ui.add(that)
            that.text = name
            if (type == 2) {

                that.fontSize = 16
            }
            that.onResize(function(self) {
                self.center()
            })

            makeBasicObject(ui)

            return ui
            
        }

        const createAppIcon = function(iconFile, name, link, platform) {
            
            // Item container.
            const item = createBox(0, 0, 110, 200);
            that.color = "transparent";
            that.round = 0;
            that.border = 0;
            that.borderColor = "black";
            that.link = link;
            that.element.style.cursor = "pointer";
            that.onClick(function(self) {
                if (self.link != "") {
                    window.open(self.link, "_blank");
                }
            })

            item.imgIcon = createImage(0, 0, 110, 110);
            item.add(that);
            that.load(iconFile);
            that.round = 20;
            that.border = 1;
            that.center("left");

            if (platform == "android") {
                // IMAGE: Android.
                boxContent.imgAndroidIcon = createImage(0, 0, 26, 26);
                item.add(that);
                that.load("image/android.png");
                that.color = "white";
                that.border = 1;
                that.round = 4;
                //that.opacity = 0.6; // 0.6
                that.right = 0;
                that.top = 0;
                that.space = 10;
            }

            if (platform == "ios") {
                // IMAGE: IOS.
                boxContent.imgiOSIcon = createImage(0, 0, 26, 26);
                item.add(that);
                that.load("image/ios.png");
                that.color = "white";
                that.border = 1;
                that.round = 4;
                //that.opacity = 0.6; // 0.6
                that.right = 0;
                that.top = 0;
                that.space = 10;
            }

            item.lblText = createLabel(0, 0, item.imgIcon.width, "auto");
            item.add(that);
            that.text = name;
            that.fontSize = 16;
            that.textAlign = "center";
            that.onResize(function(self) {
                item.lblText.aline(item.imgIcon, "bottom", 4);
                //self.center()
            });

            makeBasicObject(item);
            return item;
            
        }

        const createTechIcon = function(iconFile, name, link, platform) {
            
            // Item container.
            const item = createBox(0, 0, 255, 142);
            that.color = "transparent";
            that.round = 0;
            that.border = 0;
            that.borderColor = "black";
            that.link = link;
            that.onClick(function(self) {
                if (self.link != "") {
                    window.open(self.link, "_blank");
                }
            })
            that.element.style.cursor = "pointer";

            item.imgIcon = createImage(0, 0, 255, 142);
            item.add(that);
            that.load(iconFile);
            that.round = 4;
            that.space = 20;
            that.border = 1;
            that.borderColor = "rgba(0, 0, 0, 0.6)";
            that.color = "white";
            that.center("left");

            /*
            item.lblText = createLabel(0, 0, item.imgIcon.width, "auto");
            item.add(that);
            that.text = name;
            that.fontSize = 16;
            that.textAlign = "center";
            that.onResize(function(self) {
                item.lblText.aline(item.imgIcon, "bottom", 4);
                //self.center()
            });
            */

            makeBasicObject(item);
            return item;
            
        }

        const gotoBugraSite = function() {
            window.open("https://bug7a.github.io/", "_blank");
        }

        const gotoLicenseSite = function() {
            //window.open("https://creativecommons.org/licenses/by/4.0/", "_blank");
        }

        </script>

    </head>
    <body>
        
        <!-- HTML content -->

        <div id="htm-title" style="display:none">Mobile UI</div>
        <div id="htm-desc" style="display:none">Simple and fully customizable<br>user interface template.</div>
        <div id="htm-info1" style="display:none">Design for mobile app development<br>on <span class='text-highlight'>Capacitor</span> or <span class='text-highlight'>Cordova</span></div><!-- on <span class='text-highlight'>Apache Cordova</span> framework<br>or <span class='text-highlight'>Ionic / Capacitor</span> native runtime. -->
        <div id="htm-sample1" style="display:none"><iframe src="sample/index.html" width="360" height="640" style="border:0px solid lightgray;border-radius:4px;"></iframe></div>

        <div id="htm-info2" style="display:none;">
            <div class="title" >What are the advantages of these technologies?</div>

            <ul style="font-size:19px;">
                <li>It reduces production costs and enables the project to be developed quickly.</li>
                <li>Developed project; It can run on Android, iOS, and the web.</li>
                <li>Most of the JavaScript libraries can be used in the project.</li>
                <li>Native functions can be used with Cordova plugins.<br>(File System, Database, Bluetooth, Camera, File Transfer, BarcodeScanner, Google Maps, etc.)</li>
                <li>The syntax of the programming language is simple.</li>
                <li>HTML and CSS codes are written automatically by the basic.js library.</li>
                <li>It is designed with an object-based logic close to software development experience.</li>
                <li>It has the same positioning logic as the interface design tools. This too; makes it easy to translate your design into an application.</li>
            </ul>
        </div>

        <div id="code-example1" style="display:none">

    const APP_ID = "app-id";

    const USED_WIDTH = 600; // 550, 600, 700, "100%"
    const MAX_ZOOMABLE_WIDTH = 800;
    
    let waitingView;
    
    // First running function.
    const prepareApp = function() {
    
        // Platforms: "web", "android", "ios"
        console.log("Platform: " + app.getPlatformId());
    
        // Supports all screen resolutions (Orientation: portrait)
        page.fit(USED_WIDTH, MAX_ZOOMABLE_WIDTH);
    
        // Show launch view.
        launchView.create();
    
        // Safearea outer spaces.
        app.getSafeAreaOuterSpaces(function() {
    
            // Ready to use: app.safeAreaInsetTop, app.safeAreaInsetBottom, app.safeAreaInsetLeft, app.safeAreaInsetRight
            
            var safeAreaOptions = {
                width: USED_WIDTH,
                topOuterSpace: app.safeAreaInsetTop,
                bottomOuterSpace: app.safeAreaInsetBottom,
                backgroundColor: "transparent",
                outerBackgroundColor: "white",
                statusBarBackgroundColor: "rgba(0, 0, 0, 0.05)",
            };
    
            // SAFE AREA: App container.
            safeArea.create(safeAreaOptions);
            // Objects are first created in the "safeArea". (Previous value is the "page")
            basic.setDefaultContainerBox(safeArea.getContainerBox());
    
            // Change launchView layer after safeArea created.
            launchView.showOnSafeArea();
            
            // Start the app.
            startApp();
    
        });
    
    };
    
    // Second running function.
    const startApp = function() {
    
        loadGlobal();
        
        // UI DEFAULT VIEW: Default page view:
        defaultView.create({
            backgroundColor: "white",
            scrollY: 1,
            showWithMotion: 0,
        });
    
        // UI TOP BAR: Title and buttons:
        topBar.create({
            height: 105,
            showWithMotion: 0,
        });
        topBar.menuButton.onClick(showSideBar);
        
        // UI BOTTOM BAR: Image buttons at bottom:
        bottomBar.create({
            height: 80, // 70, 80, 90
            showSelectedText: 1, // 0
            highLightColor: "#141414", // "whitesmoke"
            reverseColorOfSelectedIcon: 1, // 0
            normalIconSpace: 16,
            selectedIconSpace: 16, // 16
        });
        bottomBar.createItemsByDataList(database.getBottomBarItemDataList());
        bottomBar.onItemClick(openPageById);
    
        // UI BUDGE FOR BOTTOM BAR: Tasks count.
        bottomBar.tasksUIBudge = bottomBar.createBudgeOnItem({ itemIndex: 3});
        //that.setValue(storage.load("todoApp-taskDataList").length || 0);
        that.setColor("indianred");
        updateBottomBarTasksUIBudge();
        //that.setVisible(0);
    
        // UI SECOND VIEW: If you need a view without unload page in defaultView:
        secondView.create({
            backgroundColor: "white",
            scrollY: 1,
            showWithMotion: 1,
        });
    
        // UI SMALL VIEW: For small pages, extra info, custom dialogs etc.
        smallView.create({
            height: 500,
            backgroundColor: "white",
            coverColor: "rgba(0, 0, 0, 0.4)",
            topRound: 13,
            scrollY: 0,
            showWithMotion: 1,
        });
    
        // UI SIDE MENU BAR: Right side menu:
        sideBar.create();
        sideBar.setTitle("CATEGORIES");
        sideBar.createItemsByDataList(database.getSideMenuBarItemDataList());
        sideBar.selectItemByIndex(0);
        sideBar.onSelectionChange(sideBarItemSelectionChanged);
    
        // UI OBJECT: Login view:
        loginView.create();
        //loginView.show();
        sideBar.lockScreenButton.onClick(lockScreen);
    
        // Shows where did you tap.
        clickEffect.create({
            clickColor: "black",
        });
    
        // WAITING VIEW: It prevents the user from touching the screen until the process is complete.
        waitingView = WaitingView({
            waitingIconFile: "components/ui-waiting-view/clock.png",
            coverBackgroundColor: "rgba(0, 0, 0, 0.4)",
        });
        // NOTE: New component technique year:2024 (Template File: components/_component-template.js)
        
        // Open the home page.
        openPageById(homePage.PAGE_ID);
    
        // Remove launch view.
        launchView.remove();
    
    }
    
    const openPageById = function(pageId) {
        switch(pageId) {
    
            case homePage.PAGE_ID:
                homePage.openInDefaultView();
                break;
    
            case searchPage.PAGE_ID:
                searchPage.openInDefaultView();
                break;
    
            case examplesPage.PAGE_ID:
                examplesPage.openInDefaultView();
                break;
    
            case tasksPage.PAGE_ID:
                tasksPage.openInDefaultView();
                break;
    
            case settingsPage.PAGE_ID:
                settingsPage.openInDefaultView();
                break;
    
        }
    }
    
    const sideBarItemSelectionChanged = function(item, itemId) {
        console.log("Side bar selection changed: " + itemId);
    }
    
    const showSideBar = function() {
        sideBar.setVisible(1);
    }
    
    const lockScreen = function() {
        sideBar.setVisible(0);
        loginView.show();
    }
    
    window.updateBottomBarTasksUIBudge = function(number) {
        bottomBar.tasksUIBudge.setValue(number || ((storage.load("todoApp-taskDataList")) ? storage.load("todoApp-taskDataList").length : 0));
    };
    
    // Run the prepareApp() function when the device is ready:
    app.onDeviceReady(prepareApp);

</div>
        
    </body>
</html>